#labels Featured
Design details

= Introduction =

This document will be a collection of notes about the design of lifeguard. It is broken into phases, much like the scope document.


= Phase 1 =

This is a list of design details that will go into the core pool manager
 * XML messages will be sent for work requests as well as for status logging.
 * XML messages will be sent for server instance busy/idle status
 * A logging interface will define an API for a status persistence layer. Initially an IBATIS implementation will be written for MySQL, but certainly others could replace this implementation.
 * A service list and workflow description mechanism needs to be defined. Could simply do this in MySQL, or could also write an interface to abstract this out and allow for different implementations.
 * Should we use Spring to plug the components together?
 * There will be an API to access the pool manager for monitoring and param setting. A WS layer could be built onto this in the future, but this allows either a web app or a standalone app to be built on top of the pool manager.
 * A base service implementation will be built to handle workflow message, status reporting, file transfer (with S3)
 * An ingestion class will be written to take data into the system for processing through a defined workflow. There will need to be at least one UI built for this class. (i.e. command line, GUI, web form).

